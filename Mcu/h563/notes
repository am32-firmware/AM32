// f051 // 
TIMERS
TIM15 input capture requires tif1, tif2
TIM2 interval timer // used for?
TIM1 bridge // used for bridge (motor 6x pwm) must be advanced control timer (TIM1 or TIM8)
TIM6 tenkHz // used for loop
TIM17 utility // used for delay()
TIM14 COM_TIMER // used for commutation scheduling
// calls periodElapsedCallback(), which commutates

TIM3

TIM16 unused

DMA CHANNEL5 or 4?
ADC DMA1CH1

dma 1 ch5 input timer 15 ch1

<!-- processDshot is not defined for any target -->

TIM1_BRK_UP_TRG_COM_IRQHandler does nothing
<!-- aka #ifndef BRUSHED_MODE
    LL_TIM_EnableCounter(COM_TIMER); // commutation_timer priority 0
    LL_TIM_GenerateEvent_UPDATE(COM_TIMER);
    LL_TIM_EnableIT_UPDATE(COM_TIMER);
    COM_TIMER->DIER &= ~((0x1UL << (0U))); // disable for now.
#endif -->
in peripherals.c ^^^


EXTI 15 dshot?

/// NUCLEO H563 ///

TIMERS
TIM15 input capture requires tif1, tif2
TIM2 commutation (AKA interval)
TIM1 bridge // used for bridge (motor 6x pwm) must be advanced control timer (TIM1 or TIM8)
TIM6 tenkHz // used for loop
TIM17 utility // used for delay()

input capture gpio
GPIO C12 signal

comparator gpio
GPIO C9 A
GPIO C11 B
GPIO D2 C

LED
GPIO G4 R
GPIO B0 G
GPIO F4 B (yellow)

Bridge gpio

DRV8323
ENABLE GPIOF0, output



gate driver spi GPIO


input capture pin (AKA signal)


/// BLUEESC ///

analog inputs

Phase A current
PF14 ADC2_INP6

Phase B current
PA6 ADC12_INP3
> ADC2_INP3

Phase C current
PF12 ADC1_INP6

Phase A voltage
PA0 ADC12_INP0
> ADC1_INP0

Phase B voltage
PC2 ADC1_INP12

Phase C voltage
PC0 ADC12_INP10
> ADC2_INP10

Thermistor temperature
PA5 ADC12_INP19

Die temperature
ADC1_INP16

Phase A comparator input
PF4

Phase B comparator input
PC15

Phase C comparator input
PC14

Input pwm A
PA8 TIM1_CH1 AF01

when interval timer is tim2, the 32 bits could be used to give a finer resolution for commutation timing

DMA_HANDLE_TYPE_DEF in targets.h appears unused, despite being defined for every? target

enableHalfTransferInt is unused

why is TIM1.DMAR (DMAB) = 0x81 during playtune?

in 
delayMillis
there is off - by one error (psc should be n-1)



void setDutyCycleAll(uint16_t newdc);
in peripherals.h is not used, see SET_DUTY_CYCLE_ALL macro

in tenkhz routine:
        if ((armed && running) && input > 47) {
            if (VARIABLE_PWM) {
            }

VARIABLE_PWM clause not used


duty_cycle_setpoint -> duty_cycle -> adjusted_duty_cycle -> SET_DUTY_CYCLE_ALL(adjusted_duty_cycle) (in tenkhzroutine)


drivers should be submodules

setPrescalerPWM is not called